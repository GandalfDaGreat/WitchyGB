INCLUDE "gbhw.inc"
INCLUDE "spritemacros.asm"

SPRITE_SIZE EQU 8

ANIM_RATE EQU 4

;Sprite struct

SPRITE_STRUCT_SIZE EQU 4
SPRITE_Y EQU 0
SPRITE_X EQU 1
SRRITE_TILE EQU 2
SPRITE_ATTRIB EQU 3

;Metasprite struct

METASPRITE_STRUCT_SIZE EQU 7
METASPRITE_ATR EQU 0
METASPRITE_X EQU 1
METASPRITE_Y EQU 2
METASPRITE_W EQU 3 ;in no. of sprites 
METASPRITE_H EQU 4 ;in no. of sprites
METASPRITE_WxH EQU 5 ;total no. of sprites
METASPRITE_START_TILE EQU 6

;Animation struct

ANIM_STRUCT_SIZE EQU 4
ANIM_COUNTER EQU 0
ANIM_ID EQU 1
ANIM_START EQU 2
ANIM_END EQU 3

;Player Anims

PLAYER_ANIM_IDLE EQU 0
PLAYER_ANIM_WALK EQU 1
PLAYER_ANIM_JUMP EQU 2

PLAYER_ANIM_IDLE_START EQU 23
PLAYER_ANIM_IDLE_END EQU 23

PLAYER_ANIM_WALK_START EQU 23
PLAYER_ANIM_WALK_END EQU 50

PLAYER_ANIM_JUMP_START EQU 59
PLAYER_ANIM_JUMP_END EQU 59

SECTION "OAM Buffer", BSS[$C000]

OAMBuf: ds 40 * SPRITE_STRUCT_SIZE

SECTION "Sprite Variables", BSS

SPRITE_COUNTER : DS 1
SPRITE_PLAYER : DS METASPRITE_STRUCT_SIZE
PLAYER_ANIM : DS ANIM_STRUCT_SIZE

SECTION "Sprite Code", HOME

SpriteInit:
	xor a
	ld [PLAYER_ANIM + ANIM_COUNTER], a
	ld [SPRITE_PLAYER + METASPRITE_ATR], a
	ld a, 60
	ld [SPRITE_PLAYER + METASPRITE_X], a
	ld [SPRITE_PLAYER + METASPRITE_Y], a
	ld a, 3
	ld [SPRITE_PLAYER + METASPRITE_W], a
	ld [SPRITE_PLAYER + METASPRITE_H], a
	ld a, 3*3
	ld [SPRITE_PLAYER + METASPRITE_WxH], a
	ld a, PLAYER_ANIM_IDLE_START
	ld [SPRITE_PLAYER + METASPRITE_START_TILE], a
	call SpriteUpdateAll
	ret
	
SpriteUpdateAll:
	SpriteUpdate SPRITE_PLAYER
	ret

SpriteAnimAll:
	SpriteAnim PLAYER_ANIM, SPRITE_PLAYER
	ret
	
;in: b - x movement
;    c - y movement

SpriteMoveAll:
	SpriteMove SPRITE_PLAYER
	ret
	