INCLUDE "gbhw.inc"
INCLUDE "spritemacros.asm"

SPRITE_SIZE EQU 8

ANIM_RATE EQU 4

;Sprite struct

SPRITE_STRUCT_SIZE EQU 4
SPRITE_Y EQU 0
SPRITE_X EQU 1
SRRITE_TILE EQU 2
SPRITE_ATTRIB EQU 3

;Metasprite struct

METASPRITE_STRUCT_SIZE EQU 7
METASPRITE_ATR EQU 0
METASPRITE_X EQU 1
METASPRITE_Y EQU 2
METASPRITE_W EQU 3 ;in no. of sprites 
METASPRITE_H EQU 4 ;in no. of sprites
METASPRITE_WxH EQU 5 ;total no. of sprites
METASPRITE_START_TILE EQU 6

;Animation struct

ANIM_STRUCT_SIZE EQU 4
ANIM_COUNTER EQU 0
ANIM_ID EQU 1
ANIM_START EQU 2
ANIM_END EQU 3

;Player Anims

PLAYER_ANIM_IDLE EQU 0
PLAYER_ANIM_WALK EQU 1
PLAYER_ANIM_JUMP EQU 2
PLAYER_ANIM_FIRE EQU 3
PLAYER_ANIM_HURT EQU 4

PLAYER_ANIM_IDLE_START EQU 23
PLAYER_ANIM_IDLE_END EQU 23

PLAYER_ANIM_WALK_START EQU 23
PLAYER_ANIM_WALK_END EQU 50

PLAYER_ANIM_JUMP_START EQU 59
PLAYER_ANIM_JUMP_END EQU 59

PLAYER_ANIM_FIRE_START EQU 68
PLAYER_ANIM_FIRE_END EQU 68

PLAYER_ANIM_HURT_START EQU 77
PLAYER_ANIM_HURT_END EQU 77

PLAYER_PROJECTILE_ANIM_RIGHT EQU 0
PLAYER_PROJECTILE_ANIM_LEFT EQU 1

PLAYER_PROJECTILE_ANIM_START EQU 86
PLAYER_PROJECTILE_ANIM_END EQU 87

SECTION "OAM Buffer", BSS[$C000]

;OAMBuf: ds 40 * SPRITE_STRUCT_SIZE
OAM_PLAYER: DS 9 * SPRITE_STRUCT_SIZE
OAM_PLAYER_PROJECTILE1: DS SPRITE_STRUCT_SIZE
OAM_PLAYER_PROJECTILE2: DS SPRITE_STRUCT_SIZE
OAM_ENEMY1: DS 9 * SPRITE_STRUCT_SIZE
OAM_ENEMY2: DS 9 * SPRITE_STRUCT_SIZE
OAM_ENEMY3: DS 9 * SPRITE_STRUCT_SIZE
OAM_ENEMY_PROJECTILE1: DS SPRITE_STRUCT_SIZE
OAM_ENEMY_PROJECTILE2: DS SPRITE_STRUCT_SIZE

SECTION "Sprite Variables", BSS

SPRITE_COUNTER : DS 1
SPRITE_PLAYER : DS METASPRITE_STRUCT_SIZE
PLAYER_ANIM : DS ANIM_STRUCT_SIZE
SPRITE_PLAYER_PROJECTILE1 : DS METASPRITE_STRUCT_SIZE
SPRITE_PLAYER_PROJECTILE2 : DS METASPRITE_STRUCT_SIZE
PLAYER_PROJECTILE1_ANIM : DS ANIM_STRUCT_SIZE
PLAYER_PROJECTILE2_ANIM : DS ANIM_STRUCT_SIZE

SECTION "Sprite Code", HOME

SpriteInitAll:
	SpriteInit SPRITE_PLAYER, PLAYER_ANIM, 60, 60, 3, 3, PLAYER_ANIM_IDLE_START
	SpriteInit SPRITE_PLAYER_PROJECTILE1, PLAYER_PROJECTILE1_ANIM, 100, 100, 1, 1, PLAYER_PROJECTILE_ANIM_START
	SpriteInit SPRITE_PLAYER_PROJECTILE2, PLAYER_PROJECTILE2_ANIM, 80, 80, 1, 1, PLAYER_PROJECTILE_ANIM_START
	call SpriteUpdateAll
	ret
	
SpriteUpdateAll:
	SpriteUpdate SPRITE_PLAYER, OAM_PLAYER
	SpriteUpdate SPRITE_PLAYER_PROJECTILE1, OAM_PLAYER_PROJECTILE1
	SpriteUpdate SPRITE_PLAYER_PROJECTILE2, OAM_PLAYER_PROJECTILE2
	ret

SpriteAnimAll:
	SpriteAnim PLAYER_ANIM, SPRITE_PLAYER
	SpriteAnim PLAYER_PROJECTILE1_ANIM, SPRITE_PLAYER_PROJECTILE1
	SpriteAnim PLAYER_PROJECTILE2_ANIM, SPRITE_PLAYER_PROJECTILE2
	ret
	
;in: b - x movement
;    c - y movement
SpriteMoveAll:
	push de
	
	ld d, b
	ld e, c
	SpriteMove SPRITE_PLAYER
	ld b, d
	ld c, e
	SpriteMove SPRITE_PLAYER_PROJECTILE1
	ld b, d
	ld c, e
	SpriteMove SPRITE_PLAYER_PROJECTILE2
	
	pop de
	ret
	